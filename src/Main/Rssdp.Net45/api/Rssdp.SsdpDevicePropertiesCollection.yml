### YamlMime:ManagedReference
items:
- uid: Rssdp.SsdpDevicePropertiesCollection
  commentId: T:Rssdp.SsdpDevicePropertiesCollection
  id: SsdpDevicePropertiesCollection
  parent: Rssdp
  children:
  - Rssdp.SsdpDevicePropertiesCollection.#ctor
  - Rssdp.SsdpDevicePropertiesCollection.#ctor(System.Int32)
  - Rssdp.SsdpDevicePropertiesCollection.Add(Rssdp.SsdpDeviceProperty)
  - Rssdp.SsdpDevicePropertiesCollection.Contains(Rssdp.SsdpDeviceProperty)
  - Rssdp.SsdpDevicePropertiesCollection.Contains(System.String)
  - Rssdp.SsdpDevicePropertiesCollection.Count
  - Rssdp.SsdpDevicePropertiesCollection.GetEnumerator
  - Rssdp.SsdpDevicePropertiesCollection.Item(System.String)
  - Rssdp.SsdpDevicePropertiesCollection.Remove(Rssdp.SsdpDeviceProperty)
  - Rssdp.SsdpDevicePropertiesCollection.Remove(System.String)
  - Rssdp.SsdpDevicePropertiesCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: SsdpDevicePropertiesCollection
  nameWithType: SsdpDevicePropertiesCollection
  fullName: Rssdp.SsdpDevicePropertiesCollection
  type: Class
  source:
    id: SsdpDevicePropertiesCollection
    path: ''
    startLine: 5718
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nRepresents a collection of <xref href=\"Rssdp.SsdpDeviceProperty\" data-throw-if-not-resolved=\"false\"></xref> instances keyed by the <xref href=\"Rssdp.SsdpDeviceProperty.FullName\" data-throw-if-not-resolved=\"false\"></xref> property value.\n"
  remarks: "\n<p>Items added to this collection are keyed by their <xref href=\"Rssdp.SsdpDeviceProperty.FullName\" data-throw-if-not-resolved=\"false\"></xref> property value, at the time they were added. If the name changes after they were added to the collection, the key is not updated unless the item is manually removed and re-added to the collection.</p>\n"
  example: []
  syntax:
    content: 'public class SsdpDevicePropertiesCollection : IEnumerable<SsdpDeviceProperty>, IEnumerable'
    content.vb: >-
      Public Class SsdpDevicePropertiesCollection
          Implements IEnumerable(Of SsdpDeviceProperty), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{Rssdp.SsdpDeviceProperty}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Rssdp.SsdpDevicePropertiesCollection.#ctor
  commentId: M:Rssdp.SsdpDevicePropertiesCollection.#ctor
  id: '#ctor'
  parent: Rssdp.SsdpDevicePropertiesCollection
  langs:
  - csharp
  - vb
  name: SsdpDevicePropertiesCollection()
  nameWithType: SsdpDevicePropertiesCollection.SsdpDevicePropertiesCollection()
  fullName: Rssdp.SsdpDevicePropertiesCollection.SsdpDevicePropertiesCollection()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 5732
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nDefault constructor.\n"
  example: []
  syntax:
    content: public SsdpDevicePropertiesCollection()
    content.vb: Public Sub New
  overload: Rssdp.SsdpDevicePropertiesCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.SsdpDevicePropertiesCollection.#ctor(System.Int32)
  commentId: M:Rssdp.SsdpDevicePropertiesCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Rssdp.SsdpDevicePropertiesCollection
  langs:
  - csharp
  - vb
  name: SsdpDevicePropertiesCollection(Int32)
  nameWithType: SsdpDevicePropertiesCollection.SsdpDevicePropertiesCollection(Int32)
  fullName: Rssdp.SsdpDevicePropertiesCollection.SsdpDevicePropertiesCollection(System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 5741
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nFull constructor.\n"
  example: []
  syntax:
    content: public SsdpDevicePropertiesCollection(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
      description: Specifies the initial capacity of the collection.
    content.vb: Public Sub New(capacity As Integer)
  overload: Rssdp.SsdpDevicePropertiesCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.SsdpDevicePropertiesCollection.Add(Rssdp.SsdpDeviceProperty)
  commentId: M:Rssdp.SsdpDevicePropertiesCollection.Add(Rssdp.SsdpDeviceProperty)
  id: Add(Rssdp.SsdpDeviceProperty)
  parent: Rssdp.SsdpDevicePropertiesCollection
  langs:
  - csharp
  - vb
  name: Add(SsdpDeviceProperty)
  nameWithType: SsdpDevicePropertiesCollection.Add(SsdpDeviceProperty)
  fullName: Rssdp.SsdpDevicePropertiesCollection.Add(Rssdp.SsdpDeviceProperty)
  type: Method
  source:
    id: Add
    path: ''
    startLine: 5759
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nAdds a <xref href=\"Rssdp.SsdpDeviceProperty\" data-throw-if-not-resolved=\"false\"></xref> instance to the collection.\n"
  remarks: "\n<p></p>\n"
  example: []
  syntax:
    content: public void Add(SsdpDeviceProperty customDeviceProperty)
    parameters:
    - id: customDeviceProperty
      type: Rssdp.SsdpDeviceProperty
      description: The property instance to add to the collection.
    content.vb: Public Sub Add(customDeviceProperty As SsdpDeviceProperty)
  overload: Rssdp.SsdpDevicePropertiesCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code data-dev-comment-type="paramref" class="paramref">customDeviceProperty</code> is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the <xref href="Rssdp.SsdpDeviceProperty.FullName" data-throw-if-not-resolved="false"></xref> property of the <code data-dev-comment-type="paramref" class="paramref">customDeviceProperty</code> argument  is null or empty string, or if the collection already contains an item with the same key.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.SsdpDevicePropertiesCollection.Remove(Rssdp.SsdpDeviceProperty)
  commentId: M:Rssdp.SsdpDevicePropertiesCollection.Remove(Rssdp.SsdpDeviceProperty)
  id: Remove(Rssdp.SsdpDeviceProperty)
  parent: Rssdp.SsdpDevicePropertiesCollection
  langs:
  - csharp
  - vb
  name: Remove(SsdpDeviceProperty)
  nameWithType: SsdpDevicePropertiesCollection.Remove(SsdpDeviceProperty)
  fullName: Rssdp.SsdpDevicePropertiesCollection.Remove(Rssdp.SsdpDeviceProperty)
  type: Method
  source:
    id: Remove
    path: ''
    startLine: 5783
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nRemoves the specified property instance from the collection.\n"
  remarks: "\n<p>Only remove the specified property if that instance was in the collection, if another property with the same full name exists in the collection it is not removed.</p>\n"
  example: []
  syntax:
    content: public bool Remove(SsdpDeviceProperty customDeviceProperty)
    parameters:
    - id: customDeviceProperty
      type: Rssdp.SsdpDeviceProperty
      description: The <xref href="Rssdp.SsdpDeviceProperty" data-throw-if-not-resolved="false"></xref> instance to remove from the collection.
    return:
      type: System.Boolean
      description: True if an item was removed from the collection, otherwise false (because it did not exist or was not the same instance).
    content.vb: Public Function Remove(customDeviceProperty As SsdpDeviceProperty) As Boolean
  overload: Rssdp.SsdpDevicePropertiesCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the <code data-dev-comment-type="paramref" class="paramref">customDeviceProperty</code> is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the <xref href="Rssdp.SsdpDeviceProperty.FullName" data-throw-if-not-resolved="false"></xref> property of the <code data-dev-comment-type="paramref" class="paramref">customDeviceProperty</code> argument  is null or empty string, or if the collection already contains an item with the same key.
  seealso:
  - linkId: Rssdp.SsdpDevicePropertiesCollection.Remove(System.String)
    commentId: M:Rssdp.SsdpDevicePropertiesCollection.Remove(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.SsdpDevicePropertiesCollection.Remove(System.String)
  commentId: M:Rssdp.SsdpDevicePropertiesCollection.Remove(System.String)
  id: Remove(System.String)
  parent: Rssdp.SsdpDevicePropertiesCollection
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: SsdpDevicePropertiesCollection.Remove(String)
  fullName: Rssdp.SsdpDevicePropertiesCollection.Remove(System.String)
  type: Method
  source:
    id: Remove
    path: ''
    startLine: 5803
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nRemoves the property with the specified key (<xref href=\"Rssdp.SsdpDeviceProperty.FullName\" data-throw-if-not-resolved=\"false\"></xref> from the collection.\n"
  example: []
  syntax:
    content: public bool Remove(string customDevicePropertyFullName)
    parameters:
    - id: customDevicePropertyFullName
      type: System.String
      description: The full name of the <xref href="Rssdp.SsdpDeviceProperty" data-throw-if-not-resolved="false"></xref> instance to remove from the collection.
    return:
      type: System.Boolean
      description: True if an item was removed from the collection, otherwise false (because no item exists in the collection with that key).
    content.vb: Public Function Remove(customDevicePropertyFullName As String) As Boolean
  overload: Rssdp.SsdpDevicePropertiesCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the <code data-dev-comment-type="paramref" class="paramref">customDevicePropertyFullName</code> argument is null or empty string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.SsdpDevicePropertiesCollection.Contains(Rssdp.SsdpDeviceProperty)
  commentId: M:Rssdp.SsdpDevicePropertiesCollection.Contains(Rssdp.SsdpDeviceProperty)
  id: Contains(Rssdp.SsdpDeviceProperty)
  parent: Rssdp.SsdpDevicePropertiesCollection
  langs:
  - csharp
  - vb
  name: Contains(SsdpDeviceProperty)
  nameWithType: SsdpDevicePropertiesCollection.Contains(SsdpDeviceProperty)
  fullName: Rssdp.SsdpDevicePropertiesCollection.Contains(Rssdp.SsdpDeviceProperty)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 5820
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nReturns a boolean indicating whether or not the specified <xref href=\"Rssdp.SsdpDeviceProperty\" data-throw-if-not-resolved=\"false\"></xref> instance is in the collection.\n"
  example: []
  syntax:
    content: public bool Contains(SsdpDeviceProperty customDeviceProperty)
    parameters:
    - id: customDeviceProperty
      type: Rssdp.SsdpDeviceProperty
      description: An <xref href="Rssdp.SsdpDeviceProperty" data-throw-if-not-resolved="false"></xref> instance to check the collection for.
    return:
      type: System.Boolean
      description: True if the specified instance exists in the collection, otherwise false.
    content.vb: Public Function Contains(customDeviceProperty As SsdpDeviceProperty) As Boolean
  overload: Rssdp.SsdpDevicePropertiesCollection.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.SsdpDevicePropertiesCollection.Contains(System.String)
  commentId: M:Rssdp.SsdpDevicePropertiesCollection.Contains(System.String)
  id: Contains(System.String)
  parent: Rssdp.SsdpDevicePropertiesCollection
  langs:
  - csharp
  - vb
  name: Contains(String)
  nameWithType: SsdpDevicePropertiesCollection.Contains(String)
  fullName: Rssdp.SsdpDevicePropertiesCollection.Contains(System.String)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 5839
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nReturns a boolean indicating whether or not a <xref href=\"Rssdp.SsdpDeviceProperty\" data-throw-if-not-resolved=\"false\"></xref> instance with the specified full name value exists in the collection.\n"
  example: []
  syntax:
    content: public bool Contains(string customDevicePropertyFullName)
    parameters:
    - id: customDevicePropertyFullName
      type: System.String
      description: A string containing the full name of the <xref href="Rssdp.SsdpDeviceProperty" data-throw-if-not-resolved="false"></xref> instance to check for.
    return:
      type: System.Boolean
      description: True if an item with the specified full name exists in the collection, otherwise false.
    content.vb: Public Function Contains(customDevicePropertyFullName As String) As Boolean
  overload: Rssdp.SsdpDevicePropertiesCollection.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.SsdpDevicePropertiesCollection.Count
  commentId: P:Rssdp.SsdpDevicePropertiesCollection.Count
  id: Count
  parent: Rssdp.SsdpDevicePropertiesCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SsdpDevicePropertiesCollection.Count
  fullName: Rssdp.SsdpDevicePropertiesCollection.Count
  type: Property
  source:
    id: Count
    path: ''
    startLine: 5856
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nReturns the number of items in the collection.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Rssdp.SsdpDevicePropertiesCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Rssdp.SsdpDevicePropertiesCollection.Item(System.String)
  commentId: P:Rssdp.SsdpDevicePropertiesCollection.Item(System.String)
  id: Item(System.String)
  parent: Rssdp.SsdpDevicePropertiesCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: SsdpDevicePropertiesCollection.Item[String]
  fullName: Rssdp.SsdpDevicePropertiesCollection.Item[System.String]
  type: Property
  source:
    id: this[]
    path: ''
    startLine: 5867
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nReturns the <xref href=\"Rssdp.SsdpDeviceProperty\" data-throw-if-not-resolved=\"false\"></xref> instance from the collection that has the specified <xref href=\"Rssdp.SsdpDeviceProperty.FullName\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
  example: []
  syntax:
    content: public SsdpDeviceProperty this[string fullName] { get; }
    parameters:
    - id: fullName
      type: System.String
      description: The full name of the property to return.
    return:
      type: Rssdp.SsdpDeviceProperty
      description: A <xref href="Rssdp.SsdpDeviceProperty" data-throw-if-not-resolved="false"></xref> instance from the collection.
    content.vb: Public ReadOnly Property Item(fullName As String) As SsdpDeviceProperty
  overload: Rssdp.SsdpDevicePropertiesCollection.Item*
  exceptions:
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: Thrown if no item exists in the collection with the specified <code data-dev-comment-type="paramref" class="paramref">fullName</code> value.
  nameWithType.vb: SsdpDevicePropertiesCollection.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Rssdp.SsdpDevicePropertiesCollection.Item(System.String)
  name.vb: Item(String)
- uid: Rssdp.SsdpDevicePropertiesCollection.GetEnumerator
  commentId: M:Rssdp.SsdpDevicePropertiesCollection.GetEnumerator
  id: GetEnumerator
  parent: Rssdp.SsdpDevicePropertiesCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: SsdpDevicePropertiesCollection.GetEnumerator()
  fullName: Rssdp.SsdpDevicePropertiesCollection.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: ''
    startLine: 5883
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nReturns an enumerator of <xref href=\"Rssdp.SsdpDeviceProperty\" data-throw-if-not-resolved=\"false\"></xref> instances in this collection.\n"
  example: []
  syntax:
    content: public IEnumerator<SsdpDeviceProperty> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Rssdp.SsdpDeviceProperty}
      description: An enumerator of <xref href="Rssdp.SsdpDeviceProperty" data-throw-if-not-resolved="false"></xref> instances in this collection.
    content.vb: Public Function GetEnumerator As IEnumerator(Of SsdpDeviceProperty)
  overload: Rssdp.SsdpDevicePropertiesCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Rssdp.SsdpDeviceProperty}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.SsdpDevicePropertiesCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Rssdp.SsdpDevicePropertiesCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Rssdp.SsdpDevicePropertiesCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: SsdpDevicePropertiesCollection.IEnumerable.GetEnumerator()
  fullName: Rssdp.SsdpDevicePropertiesCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    id: System.Collections.IEnumerable.GetEnumerator
    path: ''
    startLine: 5899
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nReturns an enumerator of <xref href=\"Rssdp.SsdpDeviceProperty\" data-throw-if-not-resolved=\"false\"></xref> instances in this collection.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: An enumerator of <xref href="Rssdp.SsdpDeviceProperty" data-throw-if-not-resolved="false"></xref> instances in this collection.
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Rssdp.SsdpDevicePropertiesCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: SsdpDevicePropertiesCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Rssdp.SsdpDeviceProperty
  commentId: T:Rssdp.SsdpDeviceProperty
  parent: Rssdp
  isExternal: false
  name: SsdpDeviceProperty
  nameWithType: SsdpDeviceProperty
  fullName: Rssdp.SsdpDeviceProperty
- uid: Rssdp.SsdpDeviceProperty.FullName
  commentId: P:Rssdp.SsdpDeviceProperty.FullName
- uid: Rssdp
  commentId: N:Rssdp
  isExternal: false
  name: Rssdp
  nameWithType: Rssdp
  fullName: Rssdp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{Rssdp.SsdpDeviceProperty}
  commentId: T:System.Collections.Generic.IEnumerable{Rssdp.SsdpDeviceProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SsdpDeviceProperty>
  nameWithType: IEnumerable<SsdpDeviceProperty>
  fullName: System.Collections.Generic.IEnumerable<Rssdp.SsdpDeviceProperty>
  nameWithType.vb: IEnumerable(Of SsdpDeviceProperty)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Rssdp.SsdpDeviceProperty)
  name.vb: IEnumerable(Of SsdpDeviceProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rssdp.SsdpDeviceProperty
    name: SsdpDeviceProperty
    nameWithType: SsdpDeviceProperty
    fullName: Rssdp.SsdpDeviceProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rssdp.SsdpDeviceProperty
    name: SsdpDeviceProperty
    nameWithType: SsdpDeviceProperty
    fullName: Rssdp.SsdpDeviceProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Rssdp.SsdpDevicePropertiesCollection.#ctor*
  commentId: Overload:Rssdp.SsdpDevicePropertiesCollection.#ctor
  isExternal: false
  name: SsdpDevicePropertiesCollection
  nameWithType: SsdpDevicePropertiesCollection.SsdpDevicePropertiesCollection
  fullName: Rssdp.SsdpDevicePropertiesCollection.SsdpDevicePropertiesCollection
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Rssdp.SsdpDevicePropertiesCollection.Add*
  commentId: Overload:Rssdp.SsdpDevicePropertiesCollection.Add
  isExternal: false
  name: Add
  nameWithType: SsdpDevicePropertiesCollection.Add
  fullName: Rssdp.SsdpDevicePropertiesCollection.Add
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Rssdp.SsdpDevicePropertiesCollection.Remove(System.String)
  commentId: M:Rssdp.SsdpDevicePropertiesCollection.Remove(System.String)
- uid: Rssdp.SsdpDevicePropertiesCollection.Remove*
  commentId: Overload:Rssdp.SsdpDevicePropertiesCollection.Remove
  isExternal: false
  name: Remove
  nameWithType: SsdpDevicePropertiesCollection.Remove
  fullName: Rssdp.SsdpDevicePropertiesCollection.Remove
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Rssdp.SsdpDevicePropertiesCollection.Contains*
  commentId: Overload:Rssdp.SsdpDevicePropertiesCollection.Contains
  isExternal: false
  name: Contains
  nameWithType: SsdpDevicePropertiesCollection.Contains
  fullName: Rssdp.SsdpDevicePropertiesCollection.Contains
- uid: Rssdp.SsdpDevicePropertiesCollection.Count*
  commentId: Overload:Rssdp.SsdpDevicePropertiesCollection.Count
  isExternal: false
  name: Count
  nameWithType: SsdpDevicePropertiesCollection.Count
  fullName: Rssdp.SsdpDevicePropertiesCollection.Count
- uid: Rssdp.SsdpDevicePropertiesCollection.Item*
  commentId: Overload:Rssdp.SsdpDevicePropertiesCollection.Item
  isExternal: false
  name: Item
  nameWithType: SsdpDevicePropertiesCollection.Item
  fullName: Rssdp.SsdpDevicePropertiesCollection.Item
- uid: System.Collections.Generic.KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
- uid: Rssdp.SsdpDevicePropertiesCollection.GetEnumerator*
  commentId: Overload:Rssdp.SsdpDevicePropertiesCollection.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: SsdpDevicePropertiesCollection.GetEnumerator
  fullName: Rssdp.SsdpDevicePropertiesCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Rssdp.SsdpDeviceProperty}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Rssdp.SsdpDeviceProperty}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Rssdp.SsdpDeviceProperty}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<SsdpDeviceProperty>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Rssdp.SsdpDeviceProperty>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of SsdpDeviceProperty).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Rssdp.SsdpDeviceProperty).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<SsdpDeviceProperty>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Rssdp.SsdpDeviceProperty>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of SsdpDeviceProperty).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Rssdp.SsdpDeviceProperty).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Rssdp.SsdpDeviceProperty}
  commentId: T:System.Collections.Generic.IEnumerator{Rssdp.SsdpDeviceProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<SsdpDeviceProperty>
  nameWithType: IEnumerator<SsdpDeviceProperty>
  fullName: System.Collections.Generic.IEnumerator<Rssdp.SsdpDeviceProperty>
  nameWithType.vb: IEnumerator(Of SsdpDeviceProperty)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Rssdp.SsdpDeviceProperty)
  name.vb: IEnumerator(Of SsdpDeviceProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rssdp.SsdpDeviceProperty
    name: SsdpDeviceProperty
    nameWithType: SsdpDeviceProperty
    fullName: Rssdp.SsdpDeviceProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rssdp.SsdpDeviceProperty
    name: SsdpDeviceProperty
    nameWithType: SsdpDeviceProperty
    fullName: Rssdp.SsdpDeviceProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Rssdp.SsdpDevicePropertiesCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Rssdp.SsdpDevicePropertiesCollection.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: SsdpDevicePropertiesCollection.IEnumerable.GetEnumerator
  fullName: Rssdp.SsdpDevicePropertiesCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: SsdpDevicePropertiesCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
