### YamlMime:ManagedReference
items:
- uid: Rssdp.DeviceUnavailableEventArgs
  commentId: T:Rssdp.DeviceUnavailableEventArgs
  id: DeviceUnavailableEventArgs
  parent: Rssdp
  children:
  - Rssdp.DeviceUnavailableEventArgs.#ctor(Rssdp.DiscoveredSsdpDevice,System.Boolean)
  - Rssdp.DeviceUnavailableEventArgs.DiscoveredDevice
  - Rssdp.DeviceUnavailableEventArgs.Expired
  langs:
  - csharp
  - vb
  name: DeviceUnavailableEventArgs
  nameWithType: DeviceUnavailableEventArgs
  fullName: Rssdp.DeviceUnavailableEventArgs
  type: Class
  source:
    id: DeviceUnavailableEventArgs
    path: ''
    startLine: 1776
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nEvent arguments for the <xref href=\"Rssdp.Infrastructure.SsdpDeviceLocatorBase.DeviceUnavailable\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: 'public sealed class DeviceUnavailableEventArgs : EventArgs'
    content.vb: >-
      Public NotInheritable Class DeviceUnavailableEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Rssdp.DeviceUnavailableEventArgs.#ctor(Rssdp.DiscoveredSsdpDevice,System.Boolean)
  commentId: M:Rssdp.DeviceUnavailableEventArgs.#ctor(Rssdp.DiscoveredSsdpDevice,System.Boolean)
  id: '#ctor(Rssdp.DiscoveredSsdpDevice,System.Boolean)'
  parent: Rssdp.DeviceUnavailableEventArgs
  langs:
  - csharp
  - vb
  name: DeviceUnavailableEventArgs(DiscoveredSsdpDevice, Boolean)
  nameWithType: DeviceUnavailableEventArgs.DeviceUnavailableEventArgs(DiscoveredSsdpDevice, Boolean)
  fullName: Rssdp.DeviceUnavailableEventArgs.DeviceUnavailableEventArgs(Rssdp.DiscoveredSsdpDevice, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1794
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nFull constructor.\n"
  example: []
  syntax:
    content: public DeviceUnavailableEventArgs(DiscoveredSsdpDevice discoveredDevice, bool expired)
    parameters:
    - id: discoveredDevice
      type: Rssdp.DiscoveredSsdpDevice
      description: A <xref href="Rssdp.DiscoveredSsdpDevice" data-throw-if-not-resolved="false"></xref> instance representing the device that has become unavailable.
    - id: expired
      type: System.Boolean
      description: A boolean value indicating whether this device is unavailable because it expired, or because it explicitly sent a byebye notification.. See <xref href="Rssdp.DeviceUnavailableEventArgs.Expired" data-throw-if-not-resolved="false"></xref> for more detail.
    content.vb: Public Sub New(discoveredDevice As DiscoveredSsdpDevice, expired As Boolean)
  overload: Rssdp.DeviceUnavailableEventArgs.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the <code data-dev-comment-type="paramref" class="paramref">discoveredDevice</code> parameter is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Rssdp.DeviceUnavailableEventArgs.Expired
  commentId: P:Rssdp.DeviceUnavailableEventArgs.Expired
  id: Expired
  parent: Rssdp.DeviceUnavailableEventArgs
  langs:
  - csharp
  - vb
  name: Expired
  nameWithType: DeviceUnavailableEventArgs.Expired
  fullName: Rssdp.DeviceUnavailableEventArgs.Expired
  type: Property
  source:
    id: Expired
    path: ''
    startLine: 1809
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nReturns true if the device is considered unavailable because it&apos;s cached information expired before a new alive notification or search result was received. Returns false if the device is unavailable because it sent an explicit notification of it&apos;s unavailability.\n"
  example: []
  syntax:
    content: public bool Expired { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Expired As Boolean
  overload: Rssdp.DeviceUnavailableEventArgs.Expired*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Rssdp.DeviceUnavailableEventArgs.DiscoveredDevice
  commentId: P:Rssdp.DeviceUnavailableEventArgs.DiscoveredDevice
  id: DiscoveredDevice
  parent: Rssdp.DeviceUnavailableEventArgs
  langs:
  - csharp
  - vb
  name: DiscoveredDevice
  nameWithType: DeviceUnavailableEventArgs.DiscoveredDevice
  fullName: Rssdp.DeviceUnavailableEventArgs.DiscoveredDevice
  type: Property
  source:
    id: DiscoveredDevice
    path: ''
    startLine: 1817
  assemblies:
  - cs.temp.dll
  namespace: Rssdp
  summary: "\nA reference to a <xref href=\"Rssdp.DiscoveredSsdpDevice\" data-throw-if-not-resolved=\"false\"></xref> instance containing the discovery details of the removed device.\n"
  example: []
  syntax:
    content: public DiscoveredSsdpDevice DiscoveredDevice { get; }
    parameters: []
    return:
      type: Rssdp.DiscoveredSsdpDevice
    content.vb: Public ReadOnly Property DiscoveredDevice As DiscoveredSsdpDevice
  overload: Rssdp.DeviceUnavailableEventArgs.DiscoveredDevice*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Rssdp.Infrastructure.SsdpDeviceLocatorBase.DeviceUnavailable
  commentId: E:Rssdp.Infrastructure.SsdpDeviceLocatorBase.DeviceUnavailable
  parent: Rssdp.Infrastructure.SsdpDeviceLocatorBase
  isExternal: false
  name: DeviceUnavailable
  nameWithType: SsdpDeviceLocatorBase.DeviceUnavailable
  fullName: Rssdp.Infrastructure.SsdpDeviceLocatorBase.DeviceUnavailable
- uid: Rssdp
  commentId: N:Rssdp
  isExternal: false
  name: Rssdp
  nameWithType: Rssdp
  fullName: Rssdp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rssdp.Infrastructure.SsdpDeviceLocatorBase
  commentId: T:Rssdp.Infrastructure.SsdpDeviceLocatorBase
  parent: Rssdp.Infrastructure
  isExternal: false
  name: SsdpDeviceLocatorBase
  nameWithType: SsdpDeviceLocatorBase
  fullName: Rssdp.Infrastructure.SsdpDeviceLocatorBase
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Rssdp.Infrastructure
  commentId: N:Rssdp.Infrastructure
  isExternal: false
  name: Rssdp.Infrastructure
  nameWithType: Rssdp.Infrastructure
  fullName: Rssdp.Infrastructure
- uid: Rssdp.DiscoveredSsdpDevice
  commentId: T:Rssdp.DiscoveredSsdpDevice
  parent: Rssdp
  isExternal: false
  name: DiscoveredSsdpDevice
  nameWithType: DiscoveredSsdpDevice
  fullName: Rssdp.DiscoveredSsdpDevice
- uid: Rssdp.DeviceUnavailableEventArgs.Expired
  commentId: P:Rssdp.DeviceUnavailableEventArgs.Expired
- uid: Rssdp.DeviceUnavailableEventArgs.#ctor*
  commentId: Overload:Rssdp.DeviceUnavailableEventArgs.#ctor
  isExternal: false
  name: DeviceUnavailableEventArgs
  nameWithType: DeviceUnavailableEventArgs.DeviceUnavailableEventArgs
  fullName: Rssdp.DeviceUnavailableEventArgs.DeviceUnavailableEventArgs
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Rssdp.DeviceUnavailableEventArgs.Expired*
  commentId: Overload:Rssdp.DeviceUnavailableEventArgs.Expired
  isExternal: false
  name: Expired
  nameWithType: DeviceUnavailableEventArgs.Expired
  fullName: Rssdp.DeviceUnavailableEventArgs.Expired
- uid: Rssdp.DeviceUnavailableEventArgs.DiscoveredDevice*
  commentId: Overload:Rssdp.DeviceUnavailableEventArgs.DiscoveredDevice
  isExternal: false
  name: DiscoveredDevice
  nameWithType: DeviceUnavailableEventArgs.DiscoveredDevice
  fullName: Rssdp.DeviceUnavailableEventArgs.DiscoveredDevice
